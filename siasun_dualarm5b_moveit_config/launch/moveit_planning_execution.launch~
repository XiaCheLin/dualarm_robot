<launch> 
   <!-- The planning and execution components of MoveIt! configured to run --> 
   <!-- using the ROS-Industrial interface. -->
   <!-- Non-standard joint names: 
         - Create a file joint_names.yaml 
           controller_joint_names: [joint_1, joint_2, ... joint_N] 
         - Update with joint names for your robot (in order expected by rbt controller) 
         - and uncomment the following line: -->

      <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
    <!-- - if sim=false, a robot_ip argument is required -->
    <rosparam command="load"  file="$(find siasun_dualarm5b_moveit_config)/config/joint_names.yaml"/>   
    <arg name="sim" default="false" /> 
    <arg name="robot_ip" unless="$(arg sim)" />
    <arg name="downloader" />

    <!-- load the robot_description parameter before launching ROS-I nodes -->
    <include file="$(find siasun_dualarm5b_moveit_config)/launch/planning_context.launch" > 
    <arg name="load_robot_description" value="true" />
    </include>

 


    <!-- run the robot simulator and action interface nodes -->
       <group if="$(arg sim)"> 
         <!--<include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />(no exit) -->
    </group>  

     <!-- run the "real robot" interface nodes -->
     <!-- - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes --> 
     <!-- - replace these calls with appropriate robot-specific calls or launch files --> 

     <group unless="$(arg sim)"> 
           <group if="$(arg downloader)">
             <include file="$(find siasun_dualarm_driver)/launch/robot_interface_download_5d.launch" > 
             <arg name="robot_ip" value="$(arg robot_ip)"/>
             <arg name="use_bswap" value="$(arg use_bswap)"/>
             </include> 
           </group>  
          <group unless="$(arg downloader)"> 
             <include file="$(find siasun_dualarm_driver)/launch/robot_interface_streaming_5d.launch" > 
             <arg name="robot_ip" value="$(arg robot_ip)"/>
             <arg name="use_bswap" value="$(arg use_bswap)"/>
            </include> 
         </group> 
      </group>  

        <!-- publish the robot state (tf transforms) -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> 

      <include file="$(find siasun_dualarm5b_moveit_config)/launch/move_group.launch"> 
          <arg name="publish_monitored_planning_scene" value="true" />  
      </include> 

       <include file="$(find siasun_dualarm5b_moveit_config)/launch/moveit_rviz.launch">
           <arg name="config" value="true"/> 
      </include>

      <include file="$(find siasun_dualarm5b_moveit_config)/launch/default_warehouse_db.launch" />

 </launch> 
